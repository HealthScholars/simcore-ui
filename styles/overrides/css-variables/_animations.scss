.animatable,
.animator {
  transition: all $default-ms ease-out;
}

.animator {
  &.in-from-bottom {
    transform: translateY(0, 100vh));
  }

  &.in-from-top {
    transform: translateY(0, -100vh));
  }

  &.in-from-left {
    transform: translateX(0, -100vw));
  }

  &.in-from-right {
    transform: translateX(0, 100vw));
  }
}

.animator.active {
  &.in-from-bottom,
  &.in-from-top {
    transform: translateY(calc(100vh - 100vh));
  }

  &.in-from-left,
  &.in-from-right {
    transform: translateX(calc(100vw - 100vw));
  }

  // effect on animator's animatable sibling elements
  &.shift.in-from-bottom ~ .animatable {
    transform: translateX(calc(15vh * -1));
  }

  &.shift.in-from-top ~ .animatable {
    transform: translateX(calc(15vh));
  }

  &.shift.in-from-left ~ .animatable {
    transform: translateX(calc(15vw));
  }

  &.shift.in-from-right ~ .animatable {
    transform: translateX(calc(15vw * -1));
  }

  &.parallax.in-from-bottom ~ .animatable {
    transform: translateY(calc(15vh * -1));

    ~ .animatable {
      transform: translateY(calc(7.5vh * -1));
    }
  }

  &.parallax.in-from-top ~ .animatable {
    transform: translateY(calc(15vh));

    ~ .animatable {
      transform: translateY(calc(7.5vh));
    }
  }

  &.parallax.in-from-left ~ .animatable {
    transform: translateX(calc(15vw));

    ~ .animatable {
      transform: translateY(calc(7.5vh));
    }
  }

  &.parallax.in-from-right ~ .animatable {
    transform: translateX(calc(15vw * -1));

    ~ .animatable {
      transform: translateY(calc(7.5vh * -1));
    }
  }
}

.lodestar {
  animation: lodestar $ms-lodestar forwards 1 ease-in-out;
}
